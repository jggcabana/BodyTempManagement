// <auto-generated />
using System;
using BodyTemp.Repositories.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BodyTemp.Repositories.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230929001838_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BodyTemp.Entities.Models.BodyTemperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Temperature")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BodyTemperatures", null, t =>
                        {
                            t.Property("Id")
                                .HasColumnName("BodyTemperatureId");
                        });
                });

            modelBuilder.Entity("BodyTemp.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("Employees", null, t =>
                        {
                            t.Property("Id")
                                .HasColumnName("EmployeeId");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeNumber = "00001",
                            FirstName = "Juan",
                            LastName = "Dela Cruz"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeNumber = "00002",
                            FirstName = "Kat",
                            LastName = "Gatmaitan"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeNumber = "00003",
                            FirstName = "Diego",
                            LastName = "Garbanzo"
                        });
                });

            modelBuilder.Entity("BodyTemp.Entities.Models.BodyTemperature", b =>
                {
                    b.HasOne("BodyTemp.Entities.Models.Employee", "Employee")
                        .WithMany("BodyTemperatures")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BodyTemp.Entities.Models.Employee", b =>
                {
                    b.Navigation("BodyTemperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
